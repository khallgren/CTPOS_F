'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.832
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("dsZOut"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsZOut
    Inherits System.Data.DataSet
    
    Private tableqryZOut As qryZOutDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("qryZOut")) Is Nothing) Then
                MyBase.Tables.Add(New qryZOutDataTable(ds.Tables("qryZOut")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property qryZOut() As qryZOutDataTable
        Get
            Return Me.tableqryZOut
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As dsZOut = CType(MyBase.Clone,dsZOut)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("qryZOut")) Is Nothing) Then
                MyBase.Tables.Add(New qryZOutDataTable(ds.Tables("qryZOut")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableqryZOut = CType(MyBase.Tables("qryZOut"),qryZOutDataTable)
        If (initTable = true) Then
            If (Not (Me.tableqryZOut) Is Nothing) Then
                Me.tableqryZOut.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsZOut"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsZOut.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableqryZOut = New qryZOutDataTable
        MyBase.Tables.Add(Me.tableqryZOut)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeqryZOut() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsZOut = New dsZOut
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub qryZOutRowChangeEventHandler(ByVal sender As Object, ByVal e As qryZOutRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class qryZOutDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private _columntblSales_lngSaleID As System.Data.DataColumn
        
        Private columnlngStoreID As System.Data.DataColumn
        
        Private columndteSaleDate As System.Data.DataColumn
        
        Private columnlngClerkID As System.Data.DataColumn
        
        Private columnlngSaleTypeID As System.Data.DataColumn
        
        Private columnlngCamperID As System.Data.DataColumn
        
        Private columnlngTransactionID As System.Data.DataColumn
        
        Private _columntblSales_lngPaymentTypeID As System.Data.DataColumn
        
        Private columnstrCheckWriter As System.Data.DataColumn
        
        Private columnblnMovedforCC As System.Data.DataColumn
        
        Private columnstrCCNumber As System.Data.DataColumn
        
        Private columnstrCCExpDate As System.Data.DataColumn
        
        Private columnlngStaffID As System.Data.DataColumn
        
        Private columnlngDeptID As System.Data.DataColumn
        
        Private columnlngRegistrationID As System.Data.DataColumn
        
        Private columndteZdOut As System.Data.DataColumn
        
        Private columnlngWSID As System.Data.DataColumn
        
        Private columnstrPhone As System.Data.DataColumn
        
        Private columnstrZip As System.Data.DataColumn
        
        Private columnstrAuthNumber As System.Data.DataColumn
        
        Private columncurTotalCharge As System.Data.DataColumn
        
        Private _columntblSales_curTax As System.Data.DataColumn
        
        Private columncurSubTotal As System.Data.DataColumn
        
        Private columncurDiscount As System.Data.DataColumn
        
        Private columnstrCVV2 As System.Data.DataColumn
        
        Private columnstrBillName As System.Data.DataColumn
        
        Private columnlngSalesDetailID As System.Data.DataColumn
        
        Private _columntblSalesDetail_lngSaleID As System.Data.DataColumn
        
        Private _columntblSalesDetail_lngInventoryID As System.Data.DataColumn
        
        Private columnlngQuantity As System.Data.DataColumn
        
        Private columncurPrice As System.Data.DataColumn
        
        Private _columntblSalesDetail_curTax As System.Data.DataColumn
        
        Private columncurTotal As System.Data.DataColumn
        
        Private _columntlkpPaymentType_lngPaymentTypeID As System.Data.DataColumn
        
        Private columnstrPaymentType As System.Data.DataColumn
        
        Private columnblnLock As System.Data.DataColumn
        
        Private columnblnAutoOnly As System.Data.DataColumn
        
        Private columnblnAccounting As System.Data.DataColumn
        
        Private columnblnMoneyPay As System.Data.DataColumn
        
        Private columnblnOnSale As System.Data.DataColumn
        
        Private columnblnTaxable As System.Data.DataColumn
        
        Private columnblnNonStock As System.Data.DataColumn
        
        Private columnblnAutoPrice As System.Data.DataColumn
        
        Private columnblnSpending As System.Data.DataColumn
        
        Private columnintReorderQty As System.Data.DataColumn
        
        Private columnintCurrentQty As System.Data.DataColumn
        
        Private columnintDepleteQty As System.Data.DataColumn
        
        Private columnintListMthd As System.Data.DataColumn
        
        Private columnintDisc1Mthd As System.Data.DataColumn
        
        Private columnintDisc2Mthd As System.Data.DataColumn
        
        Private columnintDisc3Mthd As System.Data.DataColumn
        
        Private _columntblInventory_lngInventoryID As System.Data.DataColumn
        
        Private columnlngVendorID As System.Data.DataColumn
        
        Private _columntblInventory_lngInvCategoryID As System.Data.DataColumn
        
        Private columndblListPct As System.Data.DataColumn
        
        Private columndblDisc1Pct As System.Data.DataColumn
        
        Private columndblDisc2Pct As System.Data.DataColumn
        
        Private columndblDsic3Pct As System.Data.DataColumn
        
        Private columncurCost As System.Data.DataColumn
        
        Private columncurListPrice As System.Data.DataColumn
        
        Private columncurDiscount1 As System.Data.DataColumn
        
        Private columncurDiscount2 As System.Data.DataColumn
        
        Private columncurDiscount3 As System.Data.DataColumn
        
        Private columnstrStockCode As System.Data.DataColumn
        
        Private columnstrItemName As System.Data.DataColumn
        
        Private columnstrImg As System.Data.DataColumn
        
        Private columnstrDescription As System.Data.DataColumn
        
        Private columnblnInactive As System.Data.DataColumn
        
        Private columnstrOnlineName As System.Data.DataColumn
        
        Private columndteLastUL As System.Data.DataColumn
        
        Private _columntblInvCodeCategory_lngInvCategoryID As System.Data.DataColumn
        
        Private columnstrInvCategory As System.Data.DataColumn
        
        Private columnblnPrintRecpt As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "qryZOut"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _tblSales_lngSaleIDColumn() As System.Data.DataColumn
            Get
                Return Me._columntblSales_lngSaleID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngStoreIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngStoreID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dteSaleDateColumn() As System.Data.DataColumn
            Get
                Return Me.columndteSaleDate
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngClerkIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngClerkID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngSaleTypeIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngSaleTypeID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngCamperIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngCamperID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngTransactionIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngTransactionID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _tblSales_lngPaymentTypeIDColumn() As System.Data.DataColumn
            Get
                Return Me._columntblSales_lngPaymentTypeID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strCheckWriterColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrCheckWriter
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnMovedforCCColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnMovedforCC
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strCCNumberColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrCCNumber
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strCCExpDateColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrCCExpDate
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngStaffIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngStaffID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngDeptIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngDeptID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngRegistrationIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngRegistrationID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dteZdOutColumn() As System.Data.DataColumn
            Get
                Return Me.columndteZdOut
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngWSIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngWSID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strPhoneColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrPhone
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strZipColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrZip
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strAuthNumberColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrAuthNumber
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property curTotalChargeColumn() As System.Data.DataColumn
            Get
                Return Me.columncurTotalCharge
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _tblSales_curTaxColumn() As System.Data.DataColumn
            Get
                Return Me._columntblSales_curTax
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property curSubTotalColumn() As System.Data.DataColumn
            Get
                Return Me.columncurSubTotal
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property curDiscountColumn() As System.Data.DataColumn
            Get
                Return Me.columncurDiscount
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strCVV2Column() As System.Data.DataColumn
            Get
                Return Me.columnstrCVV2
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strBillNameColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrBillName
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngSalesDetailIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngSalesDetailID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _tblSalesDetail_lngSaleIDColumn() As System.Data.DataColumn
            Get
                Return Me._columntblSalesDetail_lngSaleID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _tblSalesDetail_lngInventoryIDColumn() As System.Data.DataColumn
            Get
                Return Me._columntblSalesDetail_lngInventoryID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngQuantityColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngQuantity
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property curPriceColumn() As System.Data.DataColumn
            Get
                Return Me.columncurPrice
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _tblSalesDetail_curTaxColumn() As System.Data.DataColumn
            Get
                Return Me._columntblSalesDetail_curTax
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property curTotalColumn() As System.Data.DataColumn
            Get
                Return Me.columncurTotal
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _tlkpPaymentType_lngPaymentTypeIDColumn() As System.Data.DataColumn
            Get
                Return Me._columntlkpPaymentType_lngPaymentTypeID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strPaymentTypeColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrPaymentType
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnLockColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnLock
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnAutoOnlyColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnAutoOnly
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnAccountingColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnAccounting
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnMoneyPayColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnMoneyPay
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnOnSaleColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnOnSale
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnTaxableColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnTaxable
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnNonStockColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnNonStock
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnAutoPriceColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnAutoPrice
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnSpendingColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnSpending
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property intReorderQtyColumn() As System.Data.DataColumn
            Get
                Return Me.columnintReorderQty
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property intCurrentQtyColumn() As System.Data.DataColumn
            Get
                Return Me.columnintCurrentQty
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property intDepleteQtyColumn() As System.Data.DataColumn
            Get
                Return Me.columnintDepleteQty
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property intListMthdColumn() As System.Data.DataColumn
            Get
                Return Me.columnintListMthd
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property intDisc1MthdColumn() As System.Data.DataColumn
            Get
                Return Me.columnintDisc1Mthd
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property intDisc2MthdColumn() As System.Data.DataColumn
            Get
                Return Me.columnintDisc2Mthd
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property intDisc3MthdColumn() As System.Data.DataColumn
            Get
                Return Me.columnintDisc3Mthd
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _tblInventory_lngInventoryIDColumn() As System.Data.DataColumn
            Get
                Return Me._columntblInventory_lngInventoryID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property lngVendorIDColumn() As System.Data.DataColumn
            Get
                Return Me.columnlngVendorID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _tblInventory_lngInvCategoryIDColumn() As System.Data.DataColumn
            Get
                Return Me._columntblInventory_lngInvCategoryID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dblListPctColumn() As System.Data.DataColumn
            Get
                Return Me.columndblListPct
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dblDisc1PctColumn() As System.Data.DataColumn
            Get
                Return Me.columndblDisc1Pct
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dblDisc2PctColumn() As System.Data.DataColumn
            Get
                Return Me.columndblDisc2Pct
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dblDsic3PctColumn() As System.Data.DataColumn
            Get
                Return Me.columndblDsic3Pct
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property curCostColumn() As System.Data.DataColumn
            Get
                Return Me.columncurCost
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property curListPriceColumn() As System.Data.DataColumn
            Get
                Return Me.columncurListPrice
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property curDiscount1Column() As System.Data.DataColumn
            Get
                Return Me.columncurDiscount1
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property curDiscount2Column() As System.Data.DataColumn
            Get
                Return Me.columncurDiscount2
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property curDiscount3Column() As System.Data.DataColumn
            Get
                Return Me.columncurDiscount3
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strStockCodeColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrStockCode
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strItemNameColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrItemName
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strImgColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrImg
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strDescriptionColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrDescription
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnInactiveColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnInactive
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strOnlineNameColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrOnlineName
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dteLastULColumn() As System.Data.DataColumn
            Get
                Return Me.columndteLastUL
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _tblInvCodeCategory_lngInvCategoryIDColumn() As System.Data.DataColumn
            Get
                Return Me._columntblInvCodeCategory_lngInvCategoryID
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strInvCategoryColumn() As System.Data.DataColumn
            Get
                Return Me.columnstrInvCategory
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property blnPrintRecptColumn() As System.Data.DataColumn
            Get
                Return Me.columnblnPrintRecpt
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As qryZOutRow
            Get
                Return CType(Me.Rows(index),qryZOutRow)
            End Get
        End Property
        
        Public Event qryZOutRowChanging As qryZOutRowChangeEventHandler
        
        Public Event qryZOutRowChanged As qryZOutRowChangeEventHandler
        
        Public Event qryZOutRowDeleting As qryZOutRowChangeEventHandler
        
        Public Event qryZOutRowDeleted As qryZOutRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddqryZOutRow(ByVal row As qryZOutRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddqryZOutRow( _
                    ByVal lngStoreID As Integer,  _
                    ByVal dteSaleDate As Date,  _
                    ByVal lngClerkID As Integer,  _
                    ByVal lngSaleTypeID As Integer,  _
                    ByVal lngCamperID As Integer,  _
                    ByVal lngTransactionID As Integer,  _
                    ByVal _tblSales_lngPaymentTypeID As Integer,  _
                    ByVal strCheckWriter As String,  _
                    ByVal blnMovedforCC As Boolean,  _
                    ByVal strCCNumber As String,  _
                    ByVal strCCExpDate As String,  _
                    ByVal lngStaffID As Integer,  _
                    ByVal lngDeptID As Integer,  _
                    ByVal lngRegistrationID As Integer,  _
                    ByVal dteZdOut As Date,  _
                    ByVal lngWSID As Integer,  _
                    ByVal strPhone As String,  _
                    ByVal strZip As String,  _
                    ByVal strAuthNumber As String,  _
                    ByVal curTotalCharge As Decimal,  _
                    ByVal _tblSales_curTax As Decimal,  _
                    ByVal curSubTotal As Decimal,  _
                    ByVal curDiscount As Decimal,  _
                    ByVal strCVV2 As String,  _
                    ByVal strBillName As String,  _
                    ByVal _tblSalesDetail_lngSaleID As Integer,  _
                    ByVal _tblSalesDetail_lngInventoryID As Integer,  _
                    ByVal lngQuantity As Integer,  _
                    ByVal curPrice As Decimal,  _
                    ByVal _tblSalesDetail_curTax As Decimal,  _
                    ByVal curTotal As Decimal,  _
                    ByVal strPaymentType As String,  _
                    ByVal blnLock As Boolean,  _
                    ByVal blnAutoOnly As Boolean,  _
                    ByVal blnAccounting As Boolean,  _
                    ByVal blnMoneyPay As Boolean,  _
                    ByVal blnOnSale As Boolean,  _
                    ByVal blnTaxable As Boolean,  _
                    ByVal blnNonStock As Boolean,  _
                    ByVal blnAutoPrice As Boolean,  _
                    ByVal blnSpending As Boolean,  _
                    ByVal intReorderQty As Short,  _
                    ByVal intCurrentQty As Integer,  _
                    ByVal intDepleteQty As Short,  _
                    ByVal intListMthd As Short,  _
                    ByVal intDisc1Mthd As Short,  _
                    ByVal intDisc2Mthd As Short,  _
                    ByVal intDisc3Mthd As Short,  _
                    ByVal lngVendorID As Integer,  _
                    ByVal _tblInventory_lngInvCategoryID As Integer,  _
                    ByVal dblListPct As Double,  _
                    ByVal dblDisc1Pct As Double,  _
                    ByVal dblDisc2Pct As Double,  _
                    ByVal dblDsic3Pct As Double,  _
                    ByVal curCost As Decimal,  _
                    ByVal curListPrice As Decimal,  _
                    ByVal curDiscount1 As Decimal,  _
                    ByVal curDiscount2 As Decimal,  _
                    ByVal curDiscount3 As Decimal,  _
                    ByVal strStockCode As String,  _
                    ByVal strItemName As String,  _
                    ByVal strImg As String,  _
                    ByVal strDescription As String,  _
                    ByVal blnInactive As Boolean,  _
                    ByVal strOnlineName As String,  _
                    ByVal dteLastUL As Date,  _
                    ByVal _tblInvCodeCategory_lngInvCategoryID As Integer,  _
                    ByVal strInvCategory As String,  _
                    ByVal blnPrintRecpt As Boolean) As qryZOutRow
            Dim rowqryZOutRow As qryZOutRow = CType(Me.NewRow,qryZOutRow)
            rowqryZOutRow.ItemArray = New Object() {Nothing, lngStoreID, dteSaleDate, lngClerkID, lngSaleTypeID, lngCamperID, lngTransactionID, _tblSales_lngPaymentTypeID, strCheckWriter, blnMovedforCC, strCCNumber, strCCExpDate, lngStaffID, lngDeptID, lngRegistrationID, dteZdOut, lngWSID, strPhone, strZip, strAuthNumber, curTotalCharge, _tblSales_curTax, curSubTotal, curDiscount, strCVV2, strBillName, Nothing, _tblSalesDetail_lngSaleID, _tblSalesDetail_lngInventoryID, lngQuantity, curPrice, _tblSalesDetail_curTax, curTotal, Nothing, strPaymentType, blnLock, blnAutoOnly, blnAccounting, blnMoneyPay, blnOnSale, blnTaxable, blnNonStock, blnAutoPrice, blnSpending, intReorderQty, intCurrentQty, intDepleteQty, intListMthd, intDisc1Mthd, intDisc2Mthd, intDisc3Mthd, Nothing, lngVendorID, _tblInventory_lngInvCategoryID, dblListPct, dblDisc1Pct, dblDisc2Pct, dblDsic3Pct, curCost, curListPrice, curDiscount1, curDiscount2, curDiscount3, strStockCode, strItemName, strImg, strDescription, blnInactive, strOnlineName, dteLastUL, _tblInvCodeCategory_lngInvCategoryID, strInvCategory, blnPrintRecpt}
            Me.Rows.Add(rowqryZOutRow)
            Return rowqryZOutRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As qryZOutDataTable = CType(MyBase.Clone,qryZOutDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New qryZOutDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me._columntblSales_lngSaleID = MyBase.Columns("tblSales.lngSaleID")
            Me.columnlngStoreID = MyBase.Columns("lngStoreID")
            Me.columndteSaleDate = MyBase.Columns("dteSaleDate")
            Me.columnlngClerkID = MyBase.Columns("lngClerkID")
            Me.columnlngSaleTypeID = MyBase.Columns("lngSaleTypeID")
            Me.columnlngCamperID = MyBase.Columns("lngCamperID")
            Me.columnlngTransactionID = MyBase.Columns("lngTransactionID")
            Me._columntblSales_lngPaymentTypeID = MyBase.Columns("tblSales.lngPaymentTypeID")
            Me.columnstrCheckWriter = MyBase.Columns("strCheckWriter")
            Me.columnblnMovedforCC = MyBase.Columns("blnMovedforCC")
            Me.columnstrCCNumber = MyBase.Columns("strCCNumber")
            Me.columnstrCCExpDate = MyBase.Columns("strCCExpDate")
            Me.columnlngStaffID = MyBase.Columns("lngStaffID")
            Me.columnlngDeptID = MyBase.Columns("lngDeptID")
            Me.columnlngRegistrationID = MyBase.Columns("lngRegistrationID")
            Me.columndteZdOut = MyBase.Columns("dteZdOut")
            Me.columnlngWSID = MyBase.Columns("lngWSID")
            Me.columnstrPhone = MyBase.Columns("strPhone")
            Me.columnstrZip = MyBase.Columns("strZip")
            Me.columnstrAuthNumber = MyBase.Columns("strAuthNumber")
            Me.columncurTotalCharge = MyBase.Columns("curTotalCharge")
            Me._columntblSales_curTax = MyBase.Columns("tblSales.curTax")
            Me.columncurSubTotal = MyBase.Columns("curSubTotal")
            Me.columncurDiscount = MyBase.Columns("curDiscount")
            Me.columnstrCVV2 = MyBase.Columns("strCVV2")
            Me.columnstrBillName = MyBase.Columns("strBillName")
            Me.columnlngSalesDetailID = MyBase.Columns("lngSalesDetailID")
            Me._columntblSalesDetail_lngSaleID = MyBase.Columns("tblSalesDetail.lngSaleID")
            Me._columntblSalesDetail_lngInventoryID = MyBase.Columns("tblSalesDetail.lngInventoryID")
            Me.columnlngQuantity = MyBase.Columns("lngQuantity")
            Me.columncurPrice = MyBase.Columns("curPrice")
            Me._columntblSalesDetail_curTax = MyBase.Columns("tblSalesDetail.curTax")
            Me.columncurTotal = MyBase.Columns("curTotal")
            Me._columntlkpPaymentType_lngPaymentTypeID = MyBase.Columns("tlkpPaymentType.lngPaymentTypeID")
            Me.columnstrPaymentType = MyBase.Columns("strPaymentType")
            Me.columnblnLock = MyBase.Columns("blnLock")
            Me.columnblnAutoOnly = MyBase.Columns("blnAutoOnly")
            Me.columnblnAccounting = MyBase.Columns("blnAccounting")
            Me.columnblnMoneyPay = MyBase.Columns("blnMoneyPay")
            Me.columnblnOnSale = MyBase.Columns("blnOnSale")
            Me.columnblnTaxable = MyBase.Columns("blnTaxable")
            Me.columnblnNonStock = MyBase.Columns("blnNonStock")
            Me.columnblnAutoPrice = MyBase.Columns("blnAutoPrice")
            Me.columnblnSpending = MyBase.Columns("blnSpending")
            Me.columnintReorderQty = MyBase.Columns("intReorderQty")
            Me.columnintCurrentQty = MyBase.Columns("intCurrentQty")
            Me.columnintDepleteQty = MyBase.Columns("intDepleteQty")
            Me.columnintListMthd = MyBase.Columns("intListMthd")
            Me.columnintDisc1Mthd = MyBase.Columns("intDisc1Mthd")
            Me.columnintDisc2Mthd = MyBase.Columns("intDisc2Mthd")
            Me.columnintDisc3Mthd = MyBase.Columns("intDisc3Mthd")
            Me._columntblInventory_lngInventoryID = MyBase.Columns("tblInventory.lngInventoryID")
            Me.columnlngVendorID = MyBase.Columns("lngVendorID")
            Me._columntblInventory_lngInvCategoryID = MyBase.Columns("tblInventory.lngInvCategoryID")
            Me.columndblListPct = MyBase.Columns("dblListPct")
            Me.columndblDisc1Pct = MyBase.Columns("dblDisc1Pct")
            Me.columndblDisc2Pct = MyBase.Columns("dblDisc2Pct")
            Me.columndblDsic3Pct = MyBase.Columns("dblDsic3Pct")
            Me.columncurCost = MyBase.Columns("curCost")
            Me.columncurListPrice = MyBase.Columns("curListPrice")
            Me.columncurDiscount1 = MyBase.Columns("curDiscount1")
            Me.columncurDiscount2 = MyBase.Columns("curDiscount2")
            Me.columncurDiscount3 = MyBase.Columns("curDiscount3")
            Me.columnstrStockCode = MyBase.Columns("strStockCode")
            Me.columnstrItemName = MyBase.Columns("strItemName")
            Me.columnstrImg = MyBase.Columns("strImg")
            Me.columnstrDescription = MyBase.Columns("strDescription")
            Me.columnblnInactive = MyBase.Columns("blnInactive")
            Me.columnstrOnlineName = MyBase.Columns("strOnlineName")
            Me.columndteLastUL = MyBase.Columns("dteLastUL")
            Me._columntblInvCodeCategory_lngInvCategoryID = MyBase.Columns("tblInvCodeCategory.lngInvCategoryID")
            Me.columnstrInvCategory = MyBase.Columns("strInvCategory")
            Me.columnblnPrintRecpt = MyBase.Columns("blnPrintRecpt")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me._columntblSales_lngSaleID = New System.Data.DataColumn("tblSales.lngSaleID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            Me._columntblSales_lngSaleID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_tblSales_lngSaleID")
            Me._columntblSales_lngSaleID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_tblSales_lngSaleIDColumn")
            Me._columntblSales_lngSaleID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columntblSales_lngSaleID")
            Me._columntblSales_lngSaleID.ExtendedProperties.Add("Generator_UserColumnName", "tblSales.lngSaleID")
            MyBase.Columns.Add(Me._columntblSales_lngSaleID)
            Me.columnlngStoreID = New System.Data.DataColumn("lngStoreID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngStoreID)
            Me.columndteSaleDate = New System.Data.DataColumn("dteSaleDate", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndteSaleDate)
            Me.columnlngClerkID = New System.Data.DataColumn("lngClerkID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngClerkID)
            Me.columnlngSaleTypeID = New System.Data.DataColumn("lngSaleTypeID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngSaleTypeID)
            Me.columnlngCamperID = New System.Data.DataColumn("lngCamperID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngCamperID)
            Me.columnlngTransactionID = New System.Data.DataColumn("lngTransactionID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngTransactionID)
            Me._columntblSales_lngPaymentTypeID = New System.Data.DataColumn("tblSales.lngPaymentTypeID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            Me._columntblSales_lngPaymentTypeID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_tblSales_lngPaymentTypeID")
            Me._columntblSales_lngPaymentTypeID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_tblSales_lngPaymentTypeIDColumn")
            Me._columntblSales_lngPaymentTypeID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columntblSales_lngPaymentTypeID")
            Me._columntblSales_lngPaymentTypeID.ExtendedProperties.Add("Generator_UserColumnName", "tblSales.lngPaymentTypeID")
            MyBase.Columns.Add(Me._columntblSales_lngPaymentTypeID)
            Me.columnstrCheckWriter = New System.Data.DataColumn("strCheckWriter", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrCheckWriter)
            Me.columnblnMovedforCC = New System.Data.DataColumn("blnMovedforCC", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnMovedforCC)
            Me.columnstrCCNumber = New System.Data.DataColumn("strCCNumber", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrCCNumber)
            Me.columnstrCCExpDate = New System.Data.DataColumn("strCCExpDate", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrCCExpDate)
            Me.columnlngStaffID = New System.Data.DataColumn("lngStaffID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngStaffID)
            Me.columnlngDeptID = New System.Data.DataColumn("lngDeptID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngDeptID)
            Me.columnlngRegistrationID = New System.Data.DataColumn("lngRegistrationID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngRegistrationID)
            Me.columndteZdOut = New System.Data.DataColumn("dteZdOut", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndteZdOut)
            Me.columnlngWSID = New System.Data.DataColumn("lngWSID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngWSID)
            Me.columnstrPhone = New System.Data.DataColumn("strPhone", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrPhone)
            Me.columnstrZip = New System.Data.DataColumn("strZip", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrZip)
            Me.columnstrAuthNumber = New System.Data.DataColumn("strAuthNumber", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrAuthNumber)
            Me.columncurTotalCharge = New System.Data.DataColumn("curTotalCharge", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurTotalCharge)
            Me._columntblSales_curTax = New System.Data.DataColumn("tblSales.curTax", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            Me._columntblSales_curTax.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_tblSales_curTax")
            Me._columntblSales_curTax.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_tblSales_curTaxColumn")
            Me._columntblSales_curTax.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columntblSales_curTax")
            Me._columntblSales_curTax.ExtendedProperties.Add("Generator_UserColumnName", "tblSales.curTax")
            MyBase.Columns.Add(Me._columntblSales_curTax)
            Me.columncurSubTotal = New System.Data.DataColumn("curSubTotal", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurSubTotal)
            Me.columncurDiscount = New System.Data.DataColumn("curDiscount", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurDiscount)
            Me.columnstrCVV2 = New System.Data.DataColumn("strCVV2", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrCVV2)
            Me.columnstrBillName = New System.Data.DataColumn("strBillName", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrBillName)
            Me.columnlngSalesDetailID = New System.Data.DataColumn("lngSalesDetailID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngSalesDetailID)
            Me._columntblSalesDetail_lngSaleID = New System.Data.DataColumn("tblSalesDetail.lngSaleID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            Me._columntblSalesDetail_lngSaleID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_tblSalesDetail_lngSaleID")
            Me._columntblSalesDetail_lngSaleID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_tblSalesDetail_lngSaleIDColumn")
            Me._columntblSalesDetail_lngSaleID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columntblSalesDetail_lngSaleID")
            Me._columntblSalesDetail_lngSaleID.ExtendedProperties.Add("Generator_UserColumnName", "tblSalesDetail.lngSaleID")
            MyBase.Columns.Add(Me._columntblSalesDetail_lngSaleID)
            Me._columntblSalesDetail_lngInventoryID = New System.Data.DataColumn("tblSalesDetail.lngInventoryID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            Me._columntblSalesDetail_lngInventoryID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_tblSalesDetail_lngInventoryID")
            Me._columntblSalesDetail_lngInventoryID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_tblSalesDetail_lngInventoryIDColumn")
            Me._columntblSalesDetail_lngInventoryID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columntblSalesDetail_lngInventoryID")
            Me._columntblSalesDetail_lngInventoryID.ExtendedProperties.Add("Generator_UserColumnName", "tblSalesDetail.lngInventoryID")
            MyBase.Columns.Add(Me._columntblSalesDetail_lngInventoryID)
            Me.columnlngQuantity = New System.Data.DataColumn("lngQuantity", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngQuantity)
            Me.columncurPrice = New System.Data.DataColumn("curPrice", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurPrice)
            Me._columntblSalesDetail_curTax = New System.Data.DataColumn("tblSalesDetail.curTax", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            Me._columntblSalesDetail_curTax.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_tblSalesDetail_curTax")
            Me._columntblSalesDetail_curTax.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_tblSalesDetail_curTaxColumn")
            Me._columntblSalesDetail_curTax.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columntblSalesDetail_curTax")
            Me._columntblSalesDetail_curTax.ExtendedProperties.Add("Generator_UserColumnName", "tblSalesDetail.curTax")
            MyBase.Columns.Add(Me._columntblSalesDetail_curTax)
            Me.columncurTotal = New System.Data.DataColumn("curTotal", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurTotal)
            Me._columntlkpPaymentType_lngPaymentTypeID = New System.Data.DataColumn("tlkpPaymentType.lngPaymentTypeID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            Me._columntlkpPaymentType_lngPaymentTypeID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_tlkpPaymentType_lngPaymentTypeID")
            Me._columntlkpPaymentType_lngPaymentTypeID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_tlkpPaymentType_lngPaymentTypeIDColumn")
            Me._columntlkpPaymentType_lngPaymentTypeID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columntlkpPaymentType_lngPaymentTypeID")
            Me._columntlkpPaymentType_lngPaymentTypeID.ExtendedProperties.Add("Generator_UserColumnName", "tlkpPaymentType.lngPaymentTypeID")
            MyBase.Columns.Add(Me._columntlkpPaymentType_lngPaymentTypeID)
            Me.columnstrPaymentType = New System.Data.DataColumn("strPaymentType", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrPaymentType)
            Me.columnblnLock = New System.Data.DataColumn("blnLock", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnLock)
            Me.columnblnAutoOnly = New System.Data.DataColumn("blnAutoOnly", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnAutoOnly)
            Me.columnblnAccounting = New System.Data.DataColumn("blnAccounting", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnAccounting)
            Me.columnblnMoneyPay = New System.Data.DataColumn("blnMoneyPay", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnMoneyPay)
            Me.columnblnOnSale = New System.Data.DataColumn("blnOnSale", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnOnSale)
            Me.columnblnTaxable = New System.Data.DataColumn("blnTaxable", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnTaxable)
            Me.columnblnNonStock = New System.Data.DataColumn("blnNonStock", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnNonStock)
            Me.columnblnAutoPrice = New System.Data.DataColumn("blnAutoPrice", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnAutoPrice)
            Me.columnblnSpending = New System.Data.DataColumn("blnSpending", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnSpending)
            Me.columnintReorderQty = New System.Data.DataColumn("intReorderQty", GetType(Short), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnintReorderQty)
            Me.columnintCurrentQty = New System.Data.DataColumn("intCurrentQty", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnintCurrentQty)
            Me.columnintDepleteQty = New System.Data.DataColumn("intDepleteQty", GetType(Short), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnintDepleteQty)
            Me.columnintListMthd = New System.Data.DataColumn("intListMthd", GetType(Short), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnintListMthd)
            Me.columnintDisc1Mthd = New System.Data.DataColumn("intDisc1Mthd", GetType(Short), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnintDisc1Mthd)
            Me.columnintDisc2Mthd = New System.Data.DataColumn("intDisc2Mthd", GetType(Short), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnintDisc2Mthd)
            Me.columnintDisc3Mthd = New System.Data.DataColumn("intDisc3Mthd", GetType(Short), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnintDisc3Mthd)
            Me._columntblInventory_lngInventoryID = New System.Data.DataColumn("tblInventory.lngInventoryID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            Me._columntblInventory_lngInventoryID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_tblInventory_lngInventoryID")
            Me._columntblInventory_lngInventoryID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_tblInventory_lngInventoryIDColumn")
            Me._columntblInventory_lngInventoryID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columntblInventory_lngInventoryID")
            Me._columntblInventory_lngInventoryID.ExtendedProperties.Add("Generator_UserColumnName", "tblInventory.lngInventoryID")
            MyBase.Columns.Add(Me._columntblInventory_lngInventoryID)
            Me.columnlngVendorID = New System.Data.DataColumn("lngVendorID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlngVendorID)
            Me._columntblInventory_lngInvCategoryID = New System.Data.DataColumn("tblInventory.lngInvCategoryID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            Me._columntblInventory_lngInvCategoryID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_tblInventory_lngInvCategoryID")
            Me._columntblInventory_lngInvCategoryID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_tblInventory_lngInvCategoryIDColumn")
            Me._columntblInventory_lngInvCategoryID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columntblInventory_lngInvCategoryID")
            Me._columntblInventory_lngInvCategoryID.ExtendedProperties.Add("Generator_UserColumnName", "tblInventory.lngInvCategoryID")
            MyBase.Columns.Add(Me._columntblInventory_lngInvCategoryID)
            Me.columndblListPct = New System.Data.DataColumn("dblListPct", GetType(Double), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblListPct)
            Me.columndblDisc1Pct = New System.Data.DataColumn("dblDisc1Pct", GetType(Double), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblDisc1Pct)
            Me.columndblDisc2Pct = New System.Data.DataColumn("dblDisc2Pct", GetType(Double), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblDisc2Pct)
            Me.columndblDsic3Pct = New System.Data.DataColumn("dblDsic3Pct", GetType(Double), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndblDsic3Pct)
            Me.columncurCost = New System.Data.DataColumn("curCost", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurCost)
            Me.columncurListPrice = New System.Data.DataColumn("curListPrice", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurListPrice)
            Me.columncurDiscount1 = New System.Data.DataColumn("curDiscount1", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurDiscount1)
            Me.columncurDiscount2 = New System.Data.DataColumn("curDiscount2", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurDiscount2)
            Me.columncurDiscount3 = New System.Data.DataColumn("curDiscount3", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurDiscount3)
            Me.columnstrStockCode = New System.Data.DataColumn("strStockCode", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrStockCode)
            Me.columnstrItemName = New System.Data.DataColumn("strItemName", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrItemName)
            Me.columnstrImg = New System.Data.DataColumn("strImg", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrImg)
            Me.columnstrDescription = New System.Data.DataColumn("strDescription", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrDescription)
            Me.columnblnInactive = New System.Data.DataColumn("blnInactive", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnInactive)
            Me.columnstrOnlineName = New System.Data.DataColumn("strOnlineName", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrOnlineName)
            Me.columndteLastUL = New System.Data.DataColumn("dteLastUL", GetType(Date), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndteLastUL)
            Me._columntblInvCodeCategory_lngInvCategoryID = New System.Data.DataColumn("tblInvCodeCategory.lngInvCategoryID", GetType(Integer), Nothing, System.Data.MappingType.Element)
            Me._columntblInvCodeCategory_lngInvCategoryID.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_tblInvCodeCategory_lngInvCategoryID")
            Me._columntblInvCodeCategory_lngInvCategoryID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_tblInvCodeCategory_lngInvCategoryIDColumn")
            Me._columntblInvCodeCategory_lngInvCategoryID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columntblInvCodeCategory_lngInvCategoryID")
            Me._columntblInvCodeCategory_lngInvCategoryID.ExtendedProperties.Add("Generator_UserColumnName", "tblInvCodeCategory.lngInvCategoryID")
            MyBase.Columns.Add(Me._columntblInvCodeCategory_lngInvCategoryID)
            Me.columnstrInvCategory = New System.Data.DataColumn("strInvCategory", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrInvCategory)
            Me.columnblnPrintRecpt = New System.Data.DataColumn("blnPrintRecpt", GetType(Boolean), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnblnPrintRecpt)
            Me._columntblSales_lngSaleID.AutoIncrement = true
            Me.columnstrCheckWriter.MaxLength = 30
            Me.columnstrCCNumber.MaxLength = 50
            Me.columnstrCCExpDate.MaxLength = 4
            Me.columnstrPhone.MaxLength = 50
            Me.columnstrZip.MaxLength = 50
            Me.columnstrAuthNumber.MaxLength = 50
            Me.columnstrCVV2.MaxLength = 50
            Me.columnstrBillName.MaxLength = 255
            Me.columnlngSalesDetailID.AutoIncrement = true
            Me._columntlkpPaymentType_lngPaymentTypeID.AutoIncrement = true
            Me.columnstrPaymentType.MaxLength = 50
            Me._columntblInventory_lngInventoryID.AutoIncrement = true
            Me.columnstrStockCode.MaxLength = 15
            Me.columnstrItemName.MaxLength = 24
            Me.columnstrImg.MaxLength = 50
            Me.columnstrDescription.MaxLength = 536870910
            Me.columnstrOnlineName.MaxLength = 50
            Me.columnstrInvCategory.MaxLength = 10
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewqryZOutRow() As qryZOutRow
            Return CType(Me.NewRow,qryZOutRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New qryZOutRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(qryZOutRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.qryZOutRowChangedEvent) Is Nothing) Then
                RaiseEvent qryZOutRowChanged(Me, New qryZOutRowChangeEvent(CType(e.Row,qryZOutRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.qryZOutRowChangingEvent) Is Nothing) Then
                RaiseEvent qryZOutRowChanging(Me, New qryZOutRowChangeEvent(CType(e.Row,qryZOutRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.qryZOutRowDeletedEvent) Is Nothing) Then
                RaiseEvent qryZOutRowDeleted(Me, New qryZOutRowChangeEvent(CType(e.Row,qryZOutRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.qryZOutRowDeletingEvent) Is Nothing) Then
                RaiseEvent qryZOutRowDeleting(Me, New qryZOutRowChangeEvent(CType(e.Row,qryZOutRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveqryZOutRow(ByVal row As qryZOutRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsZOut = New dsZOut
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "qryZOutDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class qryZOutRow
        Inherits System.Data.DataRow
        
        Private tableqryZOut As qryZOutDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableqryZOut = CType(Me.Table,qryZOutDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _tblSales_lngSaleID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut._tblSales_lngSaleIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'tblSales.lngSaleID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut._tblSales_lngSaleIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngStoreID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngStoreIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngStoreID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngStoreIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dteSaleDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.dteSaleDateColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'dteSaleDate' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.dteSaleDateColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngClerkID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngClerkIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngClerkID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngClerkIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngSaleTypeID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngSaleTypeIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngSaleTypeID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngSaleTypeIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngCamperID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngCamperIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngCamperID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngCamperIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngTransactionID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngTransactionIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngTransactionID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngTransactionIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _tblSales_lngPaymentTypeID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut._tblSales_lngPaymentTypeIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'tblSales.lngPaymentTypeID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut._tblSales_lngPaymentTypeIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strCheckWriter() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strCheckWriterColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strCheckWriter' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strCheckWriterColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnMovedforCC() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnMovedforCCColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnMovedforCC' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnMovedforCCColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strCCNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strCCNumberColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strCCNumber' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strCCNumberColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strCCExpDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strCCExpDateColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strCCExpDate' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strCCExpDateColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngStaffID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngStaffIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngStaffID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngStaffIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngDeptID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngDeptIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngDeptID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngDeptIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngRegistrationID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngRegistrationIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngRegistrationID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngRegistrationIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dteZdOut() As Date
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.dteZdOutColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'dteZdOut' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.dteZdOutColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngWSID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngWSIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngWSID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngWSIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strPhone() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strPhoneColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strPhone' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strPhoneColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strZip() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strZipColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strZip' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strZipColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strAuthNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strAuthNumberColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strAuthNumber' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strAuthNumberColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property curTotalCharge() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.curTotalChargeColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'curTotalCharge' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.curTotalChargeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _tblSales_curTax() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut._tblSales_curTaxColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'tblSales.curTax' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut._tblSales_curTaxColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property curSubTotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.curSubTotalColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'curSubTotal' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.curSubTotalColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property curDiscount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.curDiscountColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'curDiscount' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.curDiscountColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strCVV2() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strCVV2Column),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strCVV2' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strCVV2Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strBillName() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strBillNameColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strBillName' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strBillNameColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngSalesDetailID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngSalesDetailIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngSalesDetailID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngSalesDetailIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _tblSalesDetail_lngSaleID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut._tblSalesDetail_lngSaleIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'tblSalesDetail.lngSaleID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut._tblSalesDetail_lngSaleIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _tblSalesDetail_lngInventoryID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut._tblSalesDetail_lngInventoryIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'tblSalesDetail.lngInventoryID' in table 'qryZOut' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut._tblSalesDetail_lngInventoryIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngQuantity() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngQuantityColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngQuantity' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngQuantityColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property curPrice() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.curPriceColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'curPrice' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.curPriceColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _tblSalesDetail_curTax() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut._tblSalesDetail_curTaxColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'tblSalesDetail.curTax' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut._tblSalesDetail_curTaxColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property curTotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.curTotalColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'curTotal' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.curTotalColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _tlkpPaymentType_lngPaymentTypeID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut._tlkpPaymentType_lngPaymentTypeIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'tlkpPaymentType.lngPaymentTypeID' in table 'qryZOut' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut._tlkpPaymentType_lngPaymentTypeIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strPaymentType() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strPaymentTypeColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strPaymentType' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strPaymentTypeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnLock() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnLockColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnLock' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnLockColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnAutoOnly() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnAutoOnlyColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnAutoOnly' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnAutoOnlyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnAccounting() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnAccountingColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnAccounting' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnAccountingColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnMoneyPay() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnMoneyPayColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnMoneyPay' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnMoneyPayColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnOnSale() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnOnSaleColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnOnSale' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnOnSaleColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnTaxable() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnTaxableColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnTaxable' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnTaxableColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnNonStock() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnNonStockColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnNonStock' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnNonStockColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnAutoPrice() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnAutoPriceColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnAutoPrice' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnAutoPriceColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnSpending() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnSpendingColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnSpending' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnSpendingColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property intReorderQty() As Short
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.intReorderQtyColumn),Short)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'intReorderQty' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.intReorderQtyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property intCurrentQty() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.intCurrentQtyColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'intCurrentQty' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.intCurrentQtyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property intDepleteQty() As Short
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.intDepleteQtyColumn),Short)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'intDepleteQty' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.intDepleteQtyColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property intListMthd() As Short
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.intListMthdColumn),Short)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'intListMthd' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.intListMthdColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property intDisc1Mthd() As Short
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.intDisc1MthdColumn),Short)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'intDisc1Mthd' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.intDisc1MthdColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property intDisc2Mthd() As Short
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.intDisc2MthdColumn),Short)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'intDisc2Mthd' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.intDisc2MthdColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property intDisc3Mthd() As Short
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.intDisc3MthdColumn),Short)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'intDisc3Mthd' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.intDisc3MthdColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _tblInventory_lngInventoryID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut._tblInventory_lngInventoryIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'tblInventory.lngInventoryID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut._tblInventory_lngInventoryIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property lngVendorID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.lngVendorIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'lngVendorID' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.lngVendorIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _tblInventory_lngInvCategoryID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut._tblInventory_lngInvCategoryIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'tblInventory.lngInvCategoryID' in table 'qryZOut' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut._tblInventory_lngInvCategoryIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dblListPct() As Double
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.dblListPctColumn),Double)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'dblListPct' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.dblListPctColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dblDisc1Pct() As Double
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.dblDisc1PctColumn),Double)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'dblDisc1Pct' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.dblDisc1PctColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dblDisc2Pct() As Double
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.dblDisc2PctColumn),Double)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'dblDisc2Pct' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.dblDisc2PctColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dblDsic3Pct() As Double
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.dblDsic3PctColumn),Double)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'dblDsic3Pct' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.dblDsic3PctColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property curCost() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.curCostColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'curCost' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.curCostColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property curListPrice() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.curListPriceColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'curListPrice' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.curListPriceColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property curDiscount1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.curDiscount1Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'curDiscount1' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.curDiscount1Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property curDiscount2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.curDiscount2Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'curDiscount2' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.curDiscount2Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property curDiscount3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.curDiscount3Column),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'curDiscount3' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.curDiscount3Column) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strStockCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strStockCodeColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strStockCode' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strStockCodeColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strItemName() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strItemNameColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strItemName' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strItemNameColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strImg() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strImgColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strImg' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strImgColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strDescription() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strDescriptionColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strDescription' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strDescriptionColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnInactive() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnInactiveColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnInactive' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnInactiveColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strOnlineName() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strOnlineNameColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strOnlineName' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strOnlineNameColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dteLastUL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.dteLastULColumn),Date)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'dteLastUL' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.dteLastULColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _tblInvCodeCategory_lngInvCategoryID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut._tblInvCodeCategory_lngInvCategoryIDColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'tblInvCodeCategory.lngInvCategoryID' in table 'qryZOut' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut._tblInvCodeCategory_lngInvCategoryIDColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strInvCategory() As String
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.strInvCategoryColumn),String)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'strInvCategory' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.strInvCategoryColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property blnPrintRecpt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableqryZOut.blnPrintRecptColumn),Boolean)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("The value for column 'blnPrintRecpt' in table 'qryZOut' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableqryZOut.blnPrintRecptColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_tblSales_lngSaleIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut._tblSales_lngSaleIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_tblSales_lngSaleIDNull()
            Me(Me.tableqryZOut._tblSales_lngSaleIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngStoreIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngStoreIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngStoreIDNull()
            Me(Me.tableqryZOut.lngStoreIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdteSaleDateNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.dteSaleDateColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdteSaleDateNull()
            Me(Me.tableqryZOut.dteSaleDateColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngClerkIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngClerkIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngClerkIDNull()
            Me(Me.tableqryZOut.lngClerkIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngSaleTypeIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngSaleTypeIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngSaleTypeIDNull()
            Me(Me.tableqryZOut.lngSaleTypeIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngCamperIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngCamperIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngCamperIDNull()
            Me(Me.tableqryZOut.lngCamperIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngTransactionIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngTransactionIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngTransactionIDNull()
            Me(Me.tableqryZOut.lngTransactionIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_tblSales_lngPaymentTypeIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut._tblSales_lngPaymentTypeIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_tblSales_lngPaymentTypeIDNull()
            Me(Me.tableqryZOut._tblSales_lngPaymentTypeIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrCheckWriterNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strCheckWriterColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrCheckWriterNull()
            Me(Me.tableqryZOut.strCheckWriterColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnMovedforCCNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnMovedforCCColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnMovedforCCNull()
            Me(Me.tableqryZOut.blnMovedforCCColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrCCNumberNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strCCNumberColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrCCNumberNull()
            Me(Me.tableqryZOut.strCCNumberColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrCCExpDateNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strCCExpDateColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrCCExpDateNull()
            Me(Me.tableqryZOut.strCCExpDateColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngStaffIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngStaffIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngStaffIDNull()
            Me(Me.tableqryZOut.lngStaffIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngDeptIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngDeptIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngDeptIDNull()
            Me(Me.tableqryZOut.lngDeptIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngRegistrationIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngRegistrationIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngRegistrationIDNull()
            Me(Me.tableqryZOut.lngRegistrationIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdteZdOutNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.dteZdOutColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdteZdOutNull()
            Me(Me.tableqryZOut.dteZdOutColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngWSIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngWSIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngWSIDNull()
            Me(Me.tableqryZOut.lngWSIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrPhoneNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strPhoneColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrPhoneNull()
            Me(Me.tableqryZOut.strPhoneColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrZipNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strZipColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrZipNull()
            Me(Me.tableqryZOut.strZipColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrAuthNumberNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strAuthNumberColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrAuthNumberNull()
            Me(Me.tableqryZOut.strAuthNumberColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurTotalChargeNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.curTotalChargeColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurTotalChargeNull()
            Me(Me.tableqryZOut.curTotalChargeColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_tblSales_curTaxNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut._tblSales_curTaxColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_tblSales_curTaxNull()
            Me(Me.tableqryZOut._tblSales_curTaxColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurSubTotalNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.curSubTotalColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurSubTotalNull()
            Me(Me.tableqryZOut.curSubTotalColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurDiscountNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.curDiscountColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurDiscountNull()
            Me(Me.tableqryZOut.curDiscountColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrCVV2Null() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strCVV2Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrCVV2Null()
            Me(Me.tableqryZOut.strCVV2Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrBillNameNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strBillNameColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrBillNameNull()
            Me(Me.tableqryZOut.strBillNameColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngSalesDetailIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngSalesDetailIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngSalesDetailIDNull()
            Me(Me.tableqryZOut.lngSalesDetailIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_tblSalesDetail_lngSaleIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut._tblSalesDetail_lngSaleIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_tblSalesDetail_lngSaleIDNull()
            Me(Me.tableqryZOut._tblSalesDetail_lngSaleIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_tblSalesDetail_lngInventoryIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut._tblSalesDetail_lngInventoryIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_tblSalesDetail_lngInventoryIDNull()
            Me(Me.tableqryZOut._tblSalesDetail_lngInventoryIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngQuantityNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngQuantityColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngQuantityNull()
            Me(Me.tableqryZOut.lngQuantityColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurPriceNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.curPriceColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurPriceNull()
            Me(Me.tableqryZOut.curPriceColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_tblSalesDetail_curTaxNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut._tblSalesDetail_curTaxColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_tblSalesDetail_curTaxNull()
            Me(Me.tableqryZOut._tblSalesDetail_curTaxColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurTotalNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.curTotalColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurTotalNull()
            Me(Me.tableqryZOut.curTotalColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_tlkpPaymentType_lngPaymentTypeIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut._tlkpPaymentType_lngPaymentTypeIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_tlkpPaymentType_lngPaymentTypeIDNull()
            Me(Me.tableqryZOut._tlkpPaymentType_lngPaymentTypeIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrPaymentTypeNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strPaymentTypeColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrPaymentTypeNull()
            Me(Me.tableqryZOut.strPaymentTypeColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnLockNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnLockColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnLockNull()
            Me(Me.tableqryZOut.blnLockColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnAutoOnlyNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnAutoOnlyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnAutoOnlyNull()
            Me(Me.tableqryZOut.blnAutoOnlyColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnAccountingNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnAccountingColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnAccountingNull()
            Me(Me.tableqryZOut.blnAccountingColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnMoneyPayNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnMoneyPayColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnMoneyPayNull()
            Me(Me.tableqryZOut.blnMoneyPayColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnOnSaleNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnOnSaleColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnOnSaleNull()
            Me(Me.tableqryZOut.blnOnSaleColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnTaxableNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnTaxableColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnTaxableNull()
            Me(Me.tableqryZOut.blnTaxableColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnNonStockNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnNonStockColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnNonStockNull()
            Me(Me.tableqryZOut.blnNonStockColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnAutoPriceNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnAutoPriceColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnAutoPriceNull()
            Me(Me.tableqryZOut.blnAutoPriceColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnSpendingNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnSpendingColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnSpendingNull()
            Me(Me.tableqryZOut.blnSpendingColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsintReorderQtyNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.intReorderQtyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetintReorderQtyNull()
            Me(Me.tableqryZOut.intReorderQtyColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsintCurrentQtyNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.intCurrentQtyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetintCurrentQtyNull()
            Me(Me.tableqryZOut.intCurrentQtyColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsintDepleteQtyNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.intDepleteQtyColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetintDepleteQtyNull()
            Me(Me.tableqryZOut.intDepleteQtyColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsintListMthdNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.intListMthdColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetintListMthdNull()
            Me(Me.tableqryZOut.intListMthdColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsintDisc1MthdNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.intDisc1MthdColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetintDisc1MthdNull()
            Me(Me.tableqryZOut.intDisc1MthdColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsintDisc2MthdNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.intDisc2MthdColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetintDisc2MthdNull()
            Me(Me.tableqryZOut.intDisc2MthdColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsintDisc3MthdNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.intDisc3MthdColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetintDisc3MthdNull()
            Me(Me.tableqryZOut.intDisc3MthdColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_tblInventory_lngInventoryIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut._tblInventory_lngInventoryIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_tblInventory_lngInventoryIDNull()
            Me(Me.tableqryZOut._tblInventory_lngInventoryIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslngVendorIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.lngVendorIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlngVendorIDNull()
            Me(Me.tableqryZOut.lngVendorIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_tblInventory_lngInvCategoryIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut._tblInventory_lngInvCategoryIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_tblInventory_lngInvCategoryIDNull()
            Me(Me.tableqryZOut._tblInventory_lngInvCategoryIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdblListPctNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.dblListPctColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdblListPctNull()
            Me(Me.tableqryZOut.dblListPctColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdblDisc1PctNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.dblDisc1PctColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdblDisc1PctNull()
            Me(Me.tableqryZOut.dblDisc1PctColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdblDisc2PctNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.dblDisc2PctColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdblDisc2PctNull()
            Me(Me.tableqryZOut.dblDisc2PctColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdblDsic3PctNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.dblDsic3PctColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdblDsic3PctNull()
            Me(Me.tableqryZOut.dblDsic3PctColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurCostNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.curCostColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurCostNull()
            Me(Me.tableqryZOut.curCostColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurListPriceNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.curListPriceColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurListPriceNull()
            Me(Me.tableqryZOut.curListPriceColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurDiscount1Null() As Boolean
            Return Me.IsNull(Me.tableqryZOut.curDiscount1Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurDiscount1Null()
            Me(Me.tableqryZOut.curDiscount1Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurDiscount2Null() As Boolean
            Return Me.IsNull(Me.tableqryZOut.curDiscount2Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurDiscount2Null()
            Me(Me.tableqryZOut.curDiscount2Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscurDiscount3Null() As Boolean
            Return Me.IsNull(Me.tableqryZOut.curDiscount3Column)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcurDiscount3Null()
            Me(Me.tableqryZOut.curDiscount3Column) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrStockCodeNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strStockCodeColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrStockCodeNull()
            Me(Me.tableqryZOut.strStockCodeColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrItemNameNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strItemNameColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrItemNameNull()
            Me(Me.tableqryZOut.strItemNameColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrImgNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strImgColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrImgNull()
            Me(Me.tableqryZOut.strImgColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strDescriptionColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrDescriptionNull()
            Me(Me.tableqryZOut.strDescriptionColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnInactiveNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnInactiveColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnInactiveNull()
            Me(Me.tableqryZOut.blnInactiveColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrOnlineNameNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strOnlineNameColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrOnlineNameNull()
            Me(Me.tableqryZOut.strOnlineNameColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdteLastULNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.dteLastULColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdteLastULNull()
            Me(Me.tableqryZOut.dteLastULColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_tblInvCodeCategory_lngInvCategoryIDNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut._tblInvCodeCategory_lngInvCategoryIDColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_tblInvCodeCategory_lngInvCategoryIDNull()
            Me(Me.tableqryZOut._tblInvCodeCategory_lngInvCategoryIDColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsstrInvCategoryNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.strInvCategoryColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetstrInvCategoryNull()
            Me(Me.tableqryZOut.strInvCategoryColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsblnPrintRecptNull() As Boolean
            Return Me.IsNull(Me.tableqryZOut.blnPrintRecptColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetblnPrintRecptNull()
            Me(Me.tableqryZOut.blnPrintRecptColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class qryZOutRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As qryZOutRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As qryZOutRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As qryZOutRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
